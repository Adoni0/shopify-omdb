[{"/Users/adamsoudani/Desktop/shopify-omdb/src/index.js":"1","/Users/adamsoudani/Desktop/shopify-omdb/src/reportWebVitals.js":"2","/Users/adamsoudani/Desktop/shopify-omdb/src/App.js":"3","/Users/adamsoudani/Desktop/shopify-omdb/src/components/SearchBar.js":"4","/Users/adamsoudani/Desktop/shopify-omdb/src/components/ResultsList.js":"5","/Users/adamsoudani/Desktop/shopify-omdb/src/components/NominationsList.js":"6"},{"size":594,"mtime":1610563559686,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610482260037,"results":"9","hashOfConfig":"8"},{"size":3240,"mtime":1610671048596,"results":"10","hashOfConfig":"8"},{"size":741,"mtime":1610670945468,"results":"11","hashOfConfig":"8"},{"size":1481,"mtime":1610671347971,"results":"12","hashOfConfig":"8"},{"size":2193,"mtime":1610654688260,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7xls4u",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/adamsoudani/Desktop/shopify-omdb/src/index.js",[],["30","31"],"/Users/adamsoudani/Desktop/shopify-omdb/src/reportWebVitals.js",[],"/Users/adamsoudani/Desktop/shopify-omdb/src/App.js",["32"],"import './App.css';\nimport { useState, useEffect } from 'react'\nimport SearchBar from './components/SearchBar'\nimport ResultsList from './components/ResultsList'\nimport NominationsList from './components/NominationsList'\nimport axios from 'axios'\n\n\nfunction App() {\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominations, setNominations] = useState([]);\n\n\n  const handleInputChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm(value);\n  }\n\n  const handleEnterKeyPress = e => {\n\n    if (e.keyCode === 13) {\n      axios.get(`http://www.omdbapi.com/`, {\n        params: {\n          s: `${searchTerm}`,\n          apikey: 'ad4a728f',\n          type: 'movie'\n        }\n      })\n        .then(response => {\n          var filmResults = [...response.data.Search];\n\n          var result = filmResults.map(film => {\n            var o = Object.assign({}, film);\n            o.isActive = true;\n            return o;\n          });\n\n          // setSearchResults(result);\n          checkForNomination(result);\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    };\n  }\n\n  const checkForNomination = (result) => {\n    // let results = [...searchResults];\n    let nominationsDuplicate = [...nominations];\n    result.forEach(film => {\n      nominationsDuplicate.forEach(movie => {\n        if (movie.imdbID === film.imdbID) {\n          film.isActive = false;\n        }\n      })\n    })\n    // console.log(result)\n    setSearchResults(result)\n  }\n\n  const addToNominations = (nominee, id) => {\n    let nominationsDuplicate = [...nominations];\n    nominationsDuplicate.push(nominee);\n    setNominations(nominationsDuplicate);\n\n    disableButton(id);\n  }\n\n  const disableButton = id => {\n    let results = [...searchResults];\n    results.forEach(movie => {\n      return movie.imdbID === id ? movie.isActive = false : null\n    })\n  }\n\n  const activateButton = id => {\n    let results = [...searchResults];\n    results.forEach(movie => {\n      return movie.imdbID === id ? movie.isActive = true : null\n    })\n  }\n\n  const removeNomination = (nominee, id) => {\n    let nominationsDuplicate = [...nominations];\n    const newNominationsArray = nominationsDuplicate.filter(nom => {\n      return nom.imdbID !== nominee.imdbID\n    });\n    setNominations(newNominationsArray);\n\n    activateButton(id);\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', marginTop: 30, justifyContent: 'center' }}>\n        <div style={{ paddingRight: 10, marginTop: 55, marginRight: 40 }}>\n          <h1 style={{ marginLeft: 10 }}>The Shoppies</h1>\n          <SearchBar\n            handleChange={handleInputChange}\n            searchTerm={searchTerm}\n            handleEnterKeyPress={handleEnterKeyPress}\n          />\n        </div>\n        <div style={{ paddingLeft: 10 }}>\n          <ResultsList\n            searchTerm={searchTerm}\n            results={searchResults}\n            addNominee={addToNominations}\n          />\n        </div>\n\n      </div>\n\n      <div style={{ paddingTop: 15 }}>\n        <NominationsList\n          nominations={nominations}\n          removeNominee={removeNomination}\n        />\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","/Users/adamsoudani/Desktop/shopify-omdb/src/components/SearchBar.js",[],["33","34"],"/Users/adamsoudani/Desktop/shopify-omdb/src/components/ResultsList.js",["35"],"import React, { useState } from 'react'\nimport { ListGroup, Button, Jumbotron } from 'react-bootstrap'\n\nconst ResultsList = ({ searchTerm, results, addNominee }) => {\n\n    const styles = {\n        results: {\n            fontWeight: 'bold',\n            fontSize: 18\n        },\n        container: {\n            width: 550,\n            height: 300,\n            overflow: 'auto',\n            borderRadius: '15px'\n        },\n        list: {\n            marginTop: 10,\n            fontSize: 12\n        }\n    }\n\n\n    return (\n        <div style={styles.container}>\n            <Jumbotron>\n            \n            <p style={styles.results}>Press ENTER to view results for \"{searchTerm}\"</p>\n            <ListGroup>\n                {results.map(movie => (\n                    <ListGroup.Item\n                    variant=\"primary\" \n                    style={styles.list} \n                    key={movie.imdbID}\n                    >~ {movie.Title} ({movie.Year}) \n                    <Button\n                    id={movie.imdbID}\n                    disabled={!movie.isActive}\n                    className=\"ml-3\"\n                    size=\"sm\" \n                    variant=\"dark\"\n                    onClick={() => addNominee(movie, movie.imdbID)}\n                    >\n                    Nominate\n                    </Button>\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n            </Jumbotron>\n        </div>\n    )\n}\n\nexport default ResultsList;\n","/Users/adamsoudani/Desktop/shopify-omdb/src/components/NominationsList.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":20,"nodeType":"42","messageId":"43","endLine":2,"endColumn":29},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"40","severity":1,"message":"46","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["47"],["48"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]